# English language configuration
# Keys are always in English, values are localized

# Progress messages
progress_collecting_arguments: "Collecting arguments..."
progress_all_arguments_collected: "✅ All arguments collected"
progress_resolving_argument: "Resolving '{0}'"

# Command execution
command_executing_header: "\n💻 Executing command:"
command_executing_spinner: "⚡ Executing command..."
command_success_output: "✅ Output:"
command_success_complete: "✅ Workflow completed successfully!"
command_error_output: "Error output:"
command_failed_with_code: "❌ Command failed with exit code: {0}"
command_failed: "❌ Command failed"

# Enum arguments
enum_args_getting_options: "🔍 Getting options for '{0}'..."
enum_args_selection_prompt: "{0}: {1}"
enum_args_no_options_found: "No options found for argument '{0}'"
enum_args_command_failed: "Enum command failed: {0}"
enum_args_missing_config: "Enum argument '{0}' missing enum_command or enum_name"
enum_args_custom_input_option: "📝 Enter custom value..."
enum_args_custom_input_prompt: "Enter custom value for {0}: "
enum_args_searchable_help: "Type to search, or press Enter to select. You can also type a custom value."

# Simple arguments
simple_args_input_prompt: "{0}: {1}"
simple_args_input_failed: "Failed to get input for argument '{0}'"

# Templates
templates_tera_instance_failed: "Failed to create Tera instance"
templates_render_failed: "Failed to render command template"

# Errors
errors_enum_command_execution_failed: "Failed to execute enum command: {0}"
errors_spawn_failed: "Failed to spawn command"
errors_wait_failed: "Failed to wait for command"
errors_execution_failed: "Command execution failed"
errors_selection_failed: "Failed to get user selection"

# Execution flow
execution_workflow_header: "🚀 Executing workflow: {0}\n📝 {1}\n"

# Main CLI messages
cli_available_workflows: "🔧 Available workflows:"
cli_navigation_tip: "   💡 Use ↑↓ arrow keys to navigate, Enter to select, 'h' for help"
cli_select_prompt: "Select a workflow"
cli_selected_workflow: "✅ Selected: {0}"
cli_workflow_description: "📝 {0}"
cli_workflow_arguments: "🔧 Arguments: {0}"
cli_user_cancelled: "User cancelled workflow selection"

# Directory and file messages
dir_no_resource_directory: "📁 No resource directory found. Create 'resource/' and add your workflow YAML files there."
file_skipping_invalid_yaml: "⚠️  Skipping {0} (invalid YAML)"
file_skipping_cannot_read: "⚠️  Skipping {0} (cannot read)"
file_no_valid_workflows: "No valid workflow files found in the resource directory.\nAdd .yaml or .yml files to get started!"
file_workflow_not_found: "Workflow file not found: {0}"

# List command messages
list_no_workflows: "No valid workflow files found in the resource directory.\nAdd .yaml or .yml files to get started!"
list_usage_header: "Usage:"
list_usage_execute: "  workflow <filename>           # Execute a workflow"
list_usage_example: "  workflow \"Scale Kubernetes Pods.yaml\"  # Example"

# File reading errors
error_failed_to_read: "Failed to read workflow file: {0}"
error_failed_to_parse: "Failed to parse workflow YAML: {0}"
error_failed_to_read_dir: "Failed to read resource directory"
error_failed_to_get_selection: "Failed to get workflow selection"
error_failed_to_read_input: "Failed to read input"

# Init command messages
init_initializing: "Initializing workflow configuration..."
init_success: "✅ Configuration initialized!"
init_config_dir: "📁 Config directory: {0}"
init_workflows_dir: "📁 Workflows directory: {0}"
init_i18n_dir: "🌐 Translations directory: {0}"
init_instructions_header: "You can now:"
init_instructions_workflows: "  • Place your workflow YAML files in {0}"
init_instructions_translations: "  • Customize translations in {0}"
init_instructions_language: "  • Set your language with: workflow lang set <language>"
init_tip_run_init: "💡 Run 'workflow init' to initialize configuration directories."

# Language command messages
lang_set_success: "✅ Language set to: {0}"
lang_unknown_language: "Unknown language '{0}'. Available languages: {1}"
lang_available_header: "Available languages:"
lang_current_marker: " (current)"
lang_current_language: "Current language: {0}"
